<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>JAX-RS Simple Service</display-name>
	<description>JAX-RS Simple Service</description>
	
	<filter>
		<filter-name>sessionfilter</filter-name>
		<filter-class> com.newenv.lpzd.security.filter.SessionFilter</filter-class>  
	</filter>
	<filter-mapping>
		<filter-name>sessionfilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>sessionfilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>corsfilter</filter-name>
		<filter-class> com.newenv.filters.CorsFilter</filter-class>  
<!-- 		 <param-name>cors.allowOrigin</param-name>   -->
<!-- 	        <param-value>*</param-value>   -->
<!-- 	    </init-param>   -->
<!-- 	    <init-param>   -->
<!-- 	     <param-name>cors.supportedMethods</param-name>   -->
<!-- 	        <param-value>GET, POST, HEAD, PUT, DELETE</param-value>   -->
<!-- 	    </init-param>   -->
<!-- 	    <init-param>   -->
<!-- 	     <param-name>cors.supportedHeaders</param-name>   -->
<!-- 	        <param-value>Accept, Origin, X-Requested-With, Content-Type, Last-Modified</param-value>   -->
<!-- 	    </init-param>   -->
<!-- 	    <init-param>   -->
<!-- 	        <param-name>cors.exposedHeaders</param-name>   -->
<!-- 	        <param-value>Set-Cookie</param-value>   -->
<!-- 	    </init-param>   -->
<!-- 	    <init-param>   -->
<!-- 	        <param-name>cors.supportsCredentials</param-name>   -->
<!-- 	        <param-value>true</param-value>   -->
<!-- 	    </init-param>   -->
 	</filter>
 	<filter-mapping>
		 <filter-name>corsfilter</filter-name>  
   		 <url-pattern>/*</url-pattern>  
	</filter-mapping>
	
	<filter>
	  	<filter-name>struts2filter</filter-name>
	  	<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
	  	</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>struts2filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/lpzd*.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	
	<listener>
	    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
	<listener>
	    <listener-class>com.newenv.lpzd.jdo.JDOServletContextListener</listener-class>
	</listener>

 	
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>
			org.apache.cxf.transport.servlet.CXFServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
	<servlet-name>Kaptcha</servlet-name>
	<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
	<!-- 是否有边框 -->

		<init-param>
	
			<param-name>kaptcha.border</param-name>
	
			<param-value>no</param-value>
	
		</init-param>
	
		<!-- 字体颜色 -->
	
		<init-param>
	
			<param-name>kaptcha.textproducer.font.color</param-name>
	
			<param-value>red</param-value>
	
		</init-param>
	
		<!-- 图片宽度 -->
	
		<init-param>
	
			<param-name>kaptcha.image.width</param-name>
	
			<param-value>135</param-value>
	
		</init-param>
	
		<!-- 使用哪些字符生成验证码 -->
	
		<init-param>
	
			<param-name>kaptcha.textproducer.char.string</param-name>
	
			<param-value>ACDEFHKPRSTWX345679</param-value>
	
		</init-param>
	
		<!-- 图片高度 -->
	
		<init-param>
	
			<param-name>kaptcha.image.height</param-name>
	
			<param-value>50</param-value>
	
		</init-param>
	
		<!-- 字体大小 -->
	
		<init-param>
	
			<param-name>kaptcha.textproducer.font.size</param-name>
	
			<param-value>43</param-value>
	
		</init-param>
	
		<!-- 干扰线的颜色 -->
	
		<init-param>
	
			<param-name>kaptcha.noise.color</param-name>
	
			<param-value>black</param-value>
	
		</init-param>
	
		<!-- 字符个数 -->
	
		<init-param>
	
			<param-name>kaptcha.textproducer.char.length</param-name>
	
			<param-value>4</param-value>
	
		</init-param>
	
		<!-- 使用哪些字体 -->
	
		<init-param>
	
			<param-name>kaptcha.textproducer.font.names</param-name>
	
			<param-value>Arial</param-value>
	
		</init-param>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>Kaptcha</servlet-name>
		<url-pattern>/Kaptcha.jpg</url-pattern>
	</servlet-mapping>
	
	<!-- 图片上传的SERVLET  -->
	 <servlet>
	  <servlet-name>UploadImage</servlet-name>
	  <servlet-class>com.elkan.kindeditor.upload.UploadImage</servlet-class>
	  <!-- 上传图片保存的目录 -->
	  <init-param>
	   <param-name>UPLOAD_PATH</param-name>
	   <param-value>uploadImg/</param-value>
	  </init-param>
	  <!-- 限制上传图片的大小，单位字节(缺省值为1MB) -->
	  <init-param>
	   <param-name>MAX_SIZE</param-name>
	   <param-value>1024000</param-value>
	  </init-param>
	  <init-param>
	  <!-- 上传图片的类型(缺省值为gif, jpg, jpeg, png, bmp) -->
	   <param-name>IMAGETYPES</param-name>
	   <param-value>jpg,png,bmp,jpeg,gif</param-value>
	  </init-param>
	  <!-- 上传图片的宽度，大于此宽度时图片会被压缩(缺省为不限定) -->
	  <init-param>
	   <param-name>MAX_WIDTH</param-name>
	   <param-value>500</param-value>
	  </init-param>
	  <!-- 上传图片的高度，大于此高度时图片会被压缩(缺省为不限定) -->
	  <init-param>
	   <param-name>MAX_HEIGHT</param-name>
	   <param-value>500</param-value>
	  </init-param>
	 </servlet>
	  <!-- 图片上传管理的SERVLET  -->
	 <servlet>
	  <servlet-name>UploadImageManager</servlet-name>
	  <servlet-class>com.elkan.kindeditor.upload.UploadImageManager</servlet-class>
	   <!-- 上传图片保存的目录 -->
	  <init-param>
	   <param-name>UPLOAD_PATH</param-name>
	   <param-value>uploadImg/</param-value>
	  </init-param>
	 </servlet>
	  <!-- 附件上传的SERVLET  -->
	 <servlet>
	  <servlet-name>UploadAccessory</servlet-name>
	  <servlet-class>com.elkan.kindeditor.upload.UploadAccessory</servlet-class>
	  <!-- 上传附件保存的目录 -->
	  <init-param>
	   <param-name>UPLOAD_PATH</param-name>
	   <param-value>uploadAttach/</param-value>
	  </init-param>
	  <!-- 上传附件的大小，单位字节(缺省为1MB) -->
	  <init-param>
	   <param-name>MAX_SIZE</param-name>
	   <param-value>1000000</param-value>
	  </init-param>
	  <!-- 上传文件的类型(缺省为doc, xls, ppt, pdf, txt, rar, zip) -->
	  <init-param>
	   <param-name>FILETYPES</param-name>
	   <param-value>doc,xls,ppt,zip,rar,txt,docx,xlsx</param-value>
	  </init-param>
	 </servlet>
	 <servlet-mapping>
	  <servlet-name>UploadImage</servlet-name>
	  <url-pattern>/uploadImages</url-pattern>
	 </servlet-mapping>
	 <servlet-mapping>
	  <servlet-name>UploadImageManager</servlet-name>
	  <url-pattern>/uploadImgManager</url-pattern>
	 </servlet-mapping>
	 <servlet-mapping>
	  <servlet-name>UploadAccessory</servlet-name>
	  <url-pattern>/uploadAccessory</url-pattern>
	 </servlet-mapping>
	<!-- init yuyue -->
<!-- 	<servlet>  -->
<!-- 		<servlet-name>AutoRunServlet</servlet-name>  -->
<!-- 		<servlet-class>com.newenv.xhjfww.utils.AutoRunServlet</servlet-class>  -->
<!-- 		<load-on-startup>1</load-on-startup>  -->
		<!-- <init-param> 
			<param-name>a</param-name> 
			<param-value>传入的参数值1</param-value>
		<init-param> 
		<init-param> 
			<param-name>b</param-name> 
			<param-value>传入的参数值2</param-value> 
		</init-param>   -->
<!-- 	</servlet> -->

	<!--jersey rest 文件上传 -->
<!-- 	<servlet> -->
<!-- 		<servlet-name>jersey-serlvet</servlet-name> -->
<!-- 		<servlet-class> -->
<!--                      com.sun.jersey.spi.container.servlet.ServletContainer -->
<!--                 </servlet-class> -->
<!-- 		<init-param> -->
<!-- 		     <param-name>com.sun.jersey.config.property.packages</param-name> -->
<!-- 		     <param-value>com.newenv.xhjfww.services.impl.file</param-value> -->
<!-- 		</init-param> -->
<!-- 		<load-on-startup>9</load-on-startup> -->
<!-- 	</servlet> -->
 
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>jersey-serlvet</servlet-name> -->
<!-- 		<url-pattern>/services/rest/*</url-pattern> -->
<!-- 	</servlet-mapping> -->
	
	
	
  
	 <welcome-file-list>
       <welcome-file>login.jsp</welcome-file>
    </welcome-file-list>
    
     <servlet>
        <servlet-name>FileUpload</servlet-name>
        <servlet-class>com.newenv.lpzd.base.ws.UploadFileServlet</servlet-class>
    </servlet>
     
    <servlet-mapping>
        <servlet-name>FileUpload</servlet-name>
        <url-pattern>/fileUpload</url-pattern>
    </servlet-mapping>
    
</web-app>
